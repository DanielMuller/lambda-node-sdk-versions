service: node-sdk-versions
# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3.38.0'
configValidationMode: error

custom:
  stage: ${file(config/stages/${self:provider.stage}.yml)}
  tags: ${self:custom.stage.tags}
  tableName: ${self:service}-versions-history

  # Add custom variables here. You can re-use variables defined in the stage yml
  # customStageVar: ${self:custom.stage.customStageVar}
  esbuild:
    packager: 'npm'
    sourcemap: false
    bundle: true
    minify: true
    keepNames: true
    exclude:
      - '@aws-sdk'

plugins:
  - serverless-esbuild
  - serverless-deployment-bucket
package:
  individually: true

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, self:custom.stage.region}
  profile: ${self:custom.stage.profile}
  memorySize: ${self:custom.stage.lambda.memorySize, '128'}
  timeout: ${self:custom.stage.lambda.timeout, '10'}
  logRetentionInDays: ${self:custom.stage.lambda.logRetention, 1}
  iam: ${file(serverless.iam.yml)}
  stackTags: ${self:custom.tags}
  deploymentBucket:
    name: com.serverless.${aws:accountId}.${aws:region}.deploys
    blockPublicAccess: true
    skipPolicySetup: true
    serverSideEncryption: AES256
  environment:
    SERVERLESS_REGION: ${aws:region}
    TABLE_NAME: ${self:custom.tableName}
functions: ${file(helpers/main.js):getFunctions}
resources:
  Resources: ${file(helpers/main.js):getResources}
#  Outputs: ${file(helpers/main.js):getOutputs}
